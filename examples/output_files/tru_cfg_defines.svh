//----------------------------------------------------------------------------------------------------------------------------
// Autogenerated file -- DO NOT EDIT
//
// This file was autogenerated by PeakRDL-svh
// Date (mm-dd-yyyy) : 07-08-2020  
// Time (hh:mm:ss)   : 17:00:19
//
// This header contains:
// * Register and register field specifiers
// * Position values for fields
// * Mask values for fields
//----------------------------------------------------------------------------------------------------------------------------

`ifndef _TRU_CFG_DEFINES_INCLUDED_
`define _TRU_CFG_DEFINES_INCLUDED_

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Register:    Slave Select Register
// Description: The TRU slave select registers (TRU_SSRn) each provide slave selection and register locking.
// Access:      RW
//
// Fields:
//     NAME                           WID   POS TYPE RESET       DESCRIPTION
//
//     LOCK                           1      31 RW   0x0         If the global lock is enabled (SPU_CTL_GLCK bit =1) and the
//                                                               TRU_ SSRn.LOCK bit is enabled, the TRU_SSRn register is read
//                                                               only.
//
//     RESERVED1                      23  30:08 RW   0x0         Reserved bits
//
//     SSR                            8   07:00 RW   0x0         The TRU_SSRn register selects the trigger master ID to which
//                                                               the trigger slave responds. For example, when a TRU_SSRn
//                                                               register is set to respond to trigger master ID n, a trigger
//                                                               that is generated by trigger master ID n results in a
//                                                               trigger out to the slave.
//
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

`define POS_TRU_SSRN_LOCK                                                         31
`define POS_TRU_SSRN_SSR                                                           0

`define MASK_TRU_SSRN_LOCK                                                (1'h1<<`POS_TRU_SSRN_LOCK)
`define MASK_TRU_SSRN_SSR                                                 (8'hff<<`POS_TRU_SSRN_SSR)


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Register:    Master Trigger Register
// Description: The TRU master trigger register (TRU_MTR) permits trigger generation  through software by writing a
//              trigger master ID value to one of the four fields in the TRU_MTR register. If the global lock is enabled
//              SPU_CTL_GLCK bit =1) and  the TRU_GCTL.LOCK bit is set, the TRU_MTR register is read only.
// Access:      RW
//
// Fields:
//     NAME                           WID   POS TYPE RESET       DESCRIPTION
//
//     MTR3                           8   31:24 RW   0x0         
//
//     MTR2                           8   23:16 RW   0x0         
//
//     MTR1                           8   15:08 RW   0x0         
//
//     MTR0                           8   07:00 RW   0x0         
//
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

`define POS_TRU_MTR_MTR3                                                          24
`define POS_TRU_MTR_MTR2                                                          16
`define POS_TRU_MTR_MTR1                                                           8
`define POS_TRU_MTR_MTR0                                                           0

`define MASK_TRU_MTR_MTR3                                                 (8'hff<<`POS_TRU_MTR_MTR3)
`define MASK_TRU_MTR_MTR2                                                 (8'hff<<`POS_TRU_MTR_MTR2)
`define MASK_TRU_MTR_MTR1                                                 (8'hff<<`POS_TRU_MTR_MTR1)
`define MASK_TRU_MTR_MTR0                                                 (8'hff<<`POS_TRU_MTR_MTR0)


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Register:    Error Address Register
// Description: The TRU error address register (TRU_ERRADDR) holds the address  from the memory mapped register access
//              generating an access error of TRU registers.
// Access:      RW
//
// Fields:
//     NAME                           WID   POS TYPE RESET       DESCRIPTION
//
//     RESERVED1                      20  31:12 RW   0x0         Reserved bits
//
//     ADDR                           12  11:00 RW   0x0         The TRU_ERRADDR.ADDR holds the address from the memory
//                                                               mapped register access generating an access error of TRU
//                                                               registers. These errors occur on access to the TRU_SSRn or
//                                                               TRU_MTR registers when these registers are locked or on
//                                                               access to an invalid address. See the TRU_SSRn and TRU_MTR
//                                                               register descriptions for more information about locking.
//                                                               The TRU_ERRADDR register holds the address of the first
//                                                               error to occur. In the event of multiple errors occurring,
//                                                               the TRU_ERRADDR register contains the address of the first
//                                                               error. To re-enable the TRU_ERRADDR register for update,
//                                                               both status bits (TRU_STAT.LWERR and TRU_STAT.ADDRERR) in
//                                                               the TRU_STAT register must be cleared.
//
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

`define POS_TRU_ERRADDR_ADDR                                                       0

`define MASK_TRU_ERRADDR_ADDR                                             (12'hfff<<`POS_TRU_ERRADDR_ADDR)


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Register:    Status Information Register
// Description: The TRU status register (TRU_STAT) contains the status of TRU_MTR and  TRU_SSRn register writes and
//              status of bus read/write errors.
// Access:      RW
//
// Fields:
//     NAME                           WID   POS TYPE RESET       DESCRIPTION
//
//     RESERVED1                      30  31:02 RW   0x0         Reserved bits
//
//     ADDRERR                        1       1 RW1C 0x0         The TRU_STAT.ADDRERR bit is set when an invalid address is
//                                                               provided for an MMR access while the TRU is selected.
//                                                               Writing a one to this bit clears the error indication. The
//                                                               TRU_ERRADDR register also is updated when an address error
//                                                               occurs during an MMR access while the TRU is selected.
//
//     LWERR                          1       0 RW1C 0x0         If TRU_STAT.LWERR is set, a lock write error has occurred.
//                                                               Writing a one to this bit clears the error indication.
//
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

`define POS_TRU_STAT_ADDRERR                                                       1
`define POS_TRU_STAT_LWERR                                                         0

`define MASK_TRU_STAT_ADDRERR                                             (1'h1<<`POS_TRU_STAT_ADDRERR)
`define MASK_TRU_STAT_LWERR                                               (1'h1<<`POS_TRU_STAT_LWERR)


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Register:    Global Control Register
// Description: The TRU global control register (TRU_GCTL) provides register locking,  TRU reset, and TRU enable.
// Access:      RW
//
// Fields:
//     NAME                           WID   POS TYPE RESET       DESCRIPTION
//
//     LOCK                           1      31 RW   0x0         If the global lock is enabled (SPU_CTL_GLCK bit =1) and the
//                                                               TRU_ GCTL.LOCK bit is enabled, the TRU_GCTL register is read
//                                                               only.
//
//     RESERVED1                      28  30:03 RW   0x0         Reserved bits
//
//     MTRL                           1       2 RW   0x0         If the global lock is enabled (SPU_CTL_GLCK bit =1) and the
//                                                               TRU_ GCTL.MTRL bit is enabled, the TRU_MTR register is read
//                                                               only.
//
//     RESET                          1       1 RW   0x1         The TRU_GCTL.RESET bit is write-1-action and triggers a soft
//                                                               reset to all TRU registers.
//
//     EN                             1       0 RW   0x0         The TRU_GCTL.EN bit is read/write and must be set for the
//                                                               TRU to propagate trigger events. All TRU register read/write
//                                                               operations continue to operate independent of the
//                                                               TRU_GCTL.EN bit.
//
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

`define POS_TRU_GCTL_LOCK                                                         31
`define POS_TRU_GCTL_MTRL                                                          2
`define POS_TRU_GCTL_RESET                                                         1
`define POS_TRU_GCTL_EN                                                            0

`define MASK_TRU_GCTL_LOCK                                                (1'h1<<`POS_TRU_GCTL_LOCK)
`define MASK_TRU_GCTL_MTRL                                                (1'h1<<`POS_TRU_GCTL_MTRL)
`define MASK_TRU_GCTL_RESET                                               (1'h1<<`POS_TRU_GCTL_RESET)
`define MASK_TRU_GCTL_EN                                                  (1'h1<<`POS_TRU_GCTL_EN)


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Register:    Receive Data Register
// Description: Used for storing the received data
// Access:      RO
//
// Fields:
//     NAME                           WID   POS TYPE RESET       DESCRIPTION
//
//     RXDATA                         32  31:00 RO   0x0         The Trigger block received data is stored in this field
//
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

`define POS_TRU_RXDATA_RXDATA                                                      0

`define MASK_TRU_RXDATA_RXDATA                                            (32'hffffffff<<`POS_TRU_RXDATA_RXDATA)



`endif

