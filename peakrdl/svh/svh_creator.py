import sys
import os
import re
import datetime
import time

############################################################################
# Main svh creater class with required properties
# for creating the svh contents and adding the data 
# into the svh file(s)
############################################################################
class svhCreator:

    def __init__(self, **kwargs):
        """
        Constructor for the svh Creator class
        """

        # Get the today's date (mm-dd-yyyy)
        self.today_date = datetime.date.today().strftime('%m-%d-%Y')

        # Get the current time (hh:mm:ss)
        self.current_time = time.strftime('%H:%M:%S') 

        # Check for stray kwargs
        if kwargs:
            raise TypeError("got an unexpected keyword argument '%s'" % list(kwargs.keys())[0])

    #####################################################################
    # Generate the output svh files
    #####################################################################
    def generate_output_svh(self, strg_to_print: str, output_file: str):

        with open(str(output_file), 'w') as hfile:
            print(svh_header_template.format(self.today_date, self.current_time, strg_to_print), file=hfile)
            hfile.close()

    #####################################################################
    # Generate the package svh file
    #####################################################################
    def generate_pkg_file(self, out_list:list, package_file:str):
        strg = ''

        # package file
        match = re.search(r"output_files[\/](.*).svh",str(package_file))
        pkg_name = ''
        if match:
            pkg_name = match.group(1)
            define_name = "_" + pkg_name.upper() + "_INCLUDED_"

        strg += '`ifndef {}\n'.format(define_name)
        strg += '`define {}\n\n'.format(define_name)

        strg += '//'*63 + '\n'
        strg += '// Package: %s\n' %(pkg_name)
        strg += '//'*63 + '\n\n'

        strg += 'package %s;\n' %(pkg_name)
                
        strg += '\n'
        strg += '  import uvm_pkg::*;\n'
        strg += '  `include "uvm_macros.svh"\n'
        strg += '\n'
        
        # include files 
        for item in out_list:
            match = re.search(r"output_files[\/](.*.svh)",str(item))
            if match:
                strg += '  `include "' + match.group(1) + '"\n'

        strg += 'endpackage: %s\n' %(pkg_name)

        # Open file for package
        with open(str(package_file), 'w') as hfile:
            print(svh_package_template.format(self.today_date, self.current_time, strg), file=hfile)
            hfile.close()

#====================================================================================================================================
#====================================================================================================================================
svh_header_template = '''//----------------------------------------------------------------------------------------------------------------------------
// Autogenerated file -- DO NOT EDIT
//
// This file was autogenerated by PeakRDL-svh
// Date (mm-dd-yyyy) : {}  
// Time (hh:mm:ss)   : {}
//
// This header contains:
// * Register and register field specifiers
// * Position values for fields
// * Mask values for fields
//----------------------------------------------------------------------------------------------------------------------------

{}
`endif
'''

#====================================================================================================================================
#====================================================================================================================================
svh_package_template = '''//----------------------------------------------------------------------------------------------------------------------------
// Autogenerated file -- DO NOT EDIT
//
// This file was autogenerated by PeakRDL-svh
// Date (mm-dd-yyyy) : {}  
// Time (hh:mm:ss)   : {}
//
// This package file includes the required define files
//----------------------------------------------------------------------------------------------------------------------------

{}
`endif
'''

